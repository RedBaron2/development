# Test against this version of Node.js
environment:
  nodejs_version: "0.10"
image: Visual Studio 2017
  # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
  au_version: master
  # Use 1 to test all, or N to split testing into N groups
  au_test_groups: 1
  
  #Chocolatey version we want to use when checking for updates.
  choco_version: '0.10.8'
  choco_version_pr: '0.10.3' # Should be kept to the version available one year ago
  nupkg_cache_path: C:\packages
  
# Install scripts. (runs after repo cloning)
install:
- ps: |
    $chocoVersion = if (($Env.APPVEYOR_PULL_REQUEST_NUMBER -eq $null) -or ($ENV:APPVEYOR_PULL_REQUEST_NUMBER -eq '')) { $Env:choco_version } else { $Env:choco_version_pr }
    if (!(Test-Path "$env:nupkg_cache_path")) { mkdir -Force "$env:nupkg_cache_path" }
    if (!(Test-Path "${env:nupkg_cache_path}\chocolatey.${chocoVersion}.nupkg")) { iwr "https://chocolatey.org/api/v2/package/chocolatey/${chocoVersion}" -OutFile   "${env:nupkg_cache_path}\chocolatey.${chocoVersion}.nupkg" }
    cup chocolatey --source ${env:nupkg_cache_path} --version $chocoVersion
  # Get the latest stable version of Node.js or io.js
  #- ps: Install-Product node $env:nodejs_version
  # install modules
  #- cinst chocolatey -y
  #- cinst au -y

# Post-install test scripts.
test_script:
- ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- ps: $PSVersionTable
- ps: $Env:au_version
- git --version
- choco --version
- ps: |
    git clone -q https://github.com/majkinetor/au.git $Env:TEMP/au
    . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version
    
- ps: .\update_all.ps1

  # Output useful info for debugging.
  #- node --version
  #- npm --version
  # run tests
  #- npm test
on_finish:
- ps: |
    if (Test-Path $Env:TEMP\chocolatey\au) { 7z a  -mx9 au_temp.7z $Env:TEMP\chocolatey\au\* }
    $paths = @(
      Resolve-Path "$env:TEMP\artifacts\*" -ea 0
      'au_temp.7z'
      'update_info.xml'
      'Update-AUPackages.md'
      'eventlogs.txt'
    )
    $paths | ? { Test-Path $_ } | % { Push-AppveyorArtifact $_ }

# Don't actually build.
build: off
