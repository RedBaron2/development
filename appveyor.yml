# Test against this version of Node.js
environment:
  nodejs_version: "0.10"

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  #- ps: Install-Product node $env:nodejs_version
  # install modules
  - cinst chocolatey -y
  #- cinst au -y

# Post-install test scripts.
test_script:

- ps: |
    git clone -q https://github.com/majkinetor/au.git $Env:TEMP/au
    . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version
    

- ps: |
    $ErrorActionPreference = 'Continue'
    if ($Env:APPVEYOR_PROJECT_NAME  -like '*test*') { ./test_all.ps1 "random $Env:au_test_groups"; return }

    if ( ($Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and ($Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
        switch -regex ($Env:APPVEYOR_REPO_COMMIT_MESSAGE)
        {
            '\[AU (.+?)\]'   { $forced = $Matches[1] }

            '\[PUSH (.+?)\]' {
                $packages = $Matches[1] -split ' '
                Write-Host "PUSHING PACKAGES: $packages"
                foreach ($package in $packages) {
                    Write-Host ("{0}`n{1}`n" -f ('-'*60), "PACKAGE: $package")
                    $package_dir = ls -recurse | ? { $_.Name -eq "$package.nuspec"} | select -First 1 | % Directory
                    if (!$package_dir) { Write-Warning "Can't find package '$package'"; continue }
                    pushd $package_dir; choco pack; Push-Package; popd
                }
                return
            }
        }
    }

  # Output useful info for debugging.
  #- node --version
  #- npm --version
  # run tests
  #- npm test

# Don't actually build.
build: off
